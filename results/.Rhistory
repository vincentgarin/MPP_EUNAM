part <- part[c(2, 1, 4, 3)]
if (part[4] == "MQE"){
file.name <- paste0("./MQE_CV/MQE_CV_", paste(part[-3], collapse = "_"),
"/CV_res.txt")
} else {
file.name <- paste0("./CV/CV_", paste(part, collapse = "_"), "/CV_res.txt")
}
res.i <- read.table(file.name, h = TRUE)
# pTS results
res[i, 6] <- mean(res.i[, 2], na.rm = TRUE)
res[i, 7] <- sd(res.i[, 2], na.rm = TRUE)
# pVS results
res[(i + 8), 6] <- mean(res.i[, 3], na.rm = TRUE)
res[(i + 8), 7] <- sd(res.i[, 3], na.rm = TRUE)
View(res)
i=2
part <- res_info[i, ]
part <- part[-5]
part <- part[c(2, 1, 4, 3)]
if (part[4] == "MQE"){
file.name <- paste0("./MQE_CV/MQE_CV_", paste(part[-3], collapse = "_"),
"/CV_res.txt")
} else {
file.name <- paste0("./CV/CV_", paste(part, collapse = "_"), "/CV_res.txt")
}
res.i <- read.table(file.name, h = TRUE)
# pTS results
res[i, 6] <- mean(res.i[, 2], na.rm = TRUE)
res[i, 7] <- sd(res.i[, 2], na.rm = TRUE)
# pVS results
res[(i + 8), 6] <- mean(res.i[, 3], na.rm = TRUE)
res[(i + 8), 7] <- sd(res.i[, 3], na.rm = TRUE)
View(res)
i=3
part <- res_info[i, ]
part <- part[-5]
part <- part[c(2, 1, 4, 3)]
View(part)
if (part[4] == "MQE"){
file.name <- paste0("./MQE_CV/MQE_CV_", paste(part[-3], collapse = "_"),
"/CV_res.txt")
} else {
file.name <- paste0("./CV/CV_", paste(part, collapse = "_"), "/CV_res.txt")
}
res.i <- read.table(file.name, h = TRUE)
# pTS results
res[i, 6] <- mean(res.i[, 2], na.rm = TRUE)
res[i, 7] <- sd(res.i[, 2], na.rm = TRUE)
# pVS results
res[(i + 8), 6] <- mean(res.i[, 3], na.rm = TRUE)
res[(i + 8), 7] <- sd(res.i[, 3], na.rm = TRUE)
View(res)
i=4
part <- res_info[i, ]
part <- part[-5]
part <- part[c(2, 1, 4, 3)]
part
file.name <- paste0("./MQE_CV/MQE_CV_", paste(part[-3], collapse = "_"),
"/CV_res.txt")
file.name
res.i <- read.table(file.name, h = TRUE)
res[i, 6] <- mean(res.i[, 2], na.rm = TRUE)
res[i, 7] <- sd(res.i[, 2], na.rm = TRUE)
# pVS results
res[(i + 8), 6] <- mean(res.i[, 3], na.rm = TRUE)
res[(i + 8), 7] <- sd(res.i[, 3], na.rm = TRUE)
View(res)
res_info <- data.frame(rep("DMY", 16), rep("short", 16),
rep(c("h.err", "cr.err_fast"), each = 8),
rep(c("par", "anc", "biall", "MQE"), time = 4),
rep(c("pTS", "pVS"), each = 4), stringsAsFactors = FALSE)
res_info <- res_info[c(1:4, 9:12, 5:8, 13:16), ]
colnames(res_info) <- c("trait", "subset", "VCOV", "Q.eff", "set")
res <- data.frame(res_info, res_tab, stringsAsFactors = FALSE)
for(i in 1:(dim(res_info)[1]/2)){
part <- res_info[i, ]
part <- part[-5]
part <- part[c(2, 1, 4, 3)]
if (part[4] == "MQE"){
file.name <- paste0("./MQE_CV/MQE_CV_", paste(part[-3], collapse = "_"),
"/CV_res.txt")
} else {
file.name <- paste0("./CV/CV_", paste(part, collapse = "_"), "/CV_res.txt")
}
res.i <- read.table(file.name, h = TRUE)
# pTS results
res[i, 6] <- mean(res.i[, 2], na.rm = TRUE)
res[i, 7] <- sd(res.i[, 2], na.rm = TRUE)
# pVS results
res[(i + 8), 6] <- mean(res.i[, 3], na.rm = TRUE)
res[(i + 8), 7] <- sd(res.i[, 3], na.rm = TRUE)
}
res_info <- data.frame(rep("DMY", 16), rep("short", 16),
rep(c("h.err", "cr.err_fast"), each = 8),
rep(c("par", "anc", "biall", "MQE"), time = 4),
rep(c("pTS", "pVS"), each = 4), stringsAsFactors = FALSE)
res_info <- res_info[c(1:4, 9:12, 5:8, 13:16), ]
colnames(res_info) <- c("trait", "subset", "VCOV", "Q.eff", "set")
res <- data.frame(res_info, res_tab, stringsAsFactors = FALSE)
View(res)
for(i in 1:(dim(res_info)[1]/2)){
part <- res_info[i, ]
part <- part[-5]
part <- part[c(2, 1, 4, 3)]
if (part[4] == "MQE"){
file.name <- paste0("./MQE_CV/MQE_CV_", paste(part[-3], collapse = "_"),
"/CV_res.txt")
} else {
file.name <- paste0("./CV/CV_", paste(part, collapse = "_"), "/CV_res.txt")
}
res.i <- read.table(file.name, h = TRUE)
# pTS results
res[i, 6] <- mean(res.i[, 2], na.rm = TRUE)
res[i, 7] <- sd(res.i[, 2], na.rm = TRUE)
# pVS results
res[(i + 8), 6] <- mean(res.i[, 3], na.rm = TRUE)
res[(i + 8), 7] <- sd(res.i[, 3], na.rm = TRUE)
}
i
View(res)
part <- res_info[i, ]
part <- part[-5]
part <- part[c(2, 1, 4, 3)]
part
part[3]
for(i in 1:(dim(res_info)[1]/2)){
part <- res_info[i, ]
part <- part[-5]
part <- part[c(2, 1, 4, 3)]
if (part[3] == "MQE"){
file.name <- paste0("./MQE_CV/MQE_CV_", paste(part[-3], collapse = "_"),
"/CV_res.txt")
} else {
file.name <- paste0("./CV/CV_", paste(part, collapse = "_"), "/CV_res.txt")
}
res.i <- read.table(file.name, h = TRUE)
# pTS results
res[i, 6] <- mean(res.i[, 2], na.rm = TRUE)
res[i, 7] <- sd(res.i[, 2], na.rm = TRUE)
# pVS results
res[(i + 8), 6] <- mean(res.i[, 3], na.rm = TRUE)
res[(i + 8), 7] <- sd(res.i[, 3], na.rm = TRUE)
}
View(res)
View(res)
data <- res
colnames(data)[6:7] <- c("var.ex", "se")
View(data)
View(data)
View(data)
data$VCOV <- factor(data$VCOV, levels = c("HRT", "CSRT"))
View(data)
res_info <- data.frame(rep("DMY", 16), rep("short", 16),
rep(c("h.err", "cr.err_fast"), each = 8),
rep(c("par", "anc", "biall", "MQE"), time = 4),
rep(c("pTS", "pVS"), each = 4), stringsAsFactors = FALSE)
res_info <- res_info[c(1:4, 9:12, 5:8, 13:16), ]
colnames(res_info) <- c("trait", "subset", "VCOV", "Q.eff", "set")
res <- data.frame(res_info, res_tab, stringsAsFactors = FALSE)
for(i in 1:(dim(res_info)[1]/2)){
part <- res_info[i, ]
part <- part[-5]
part <- part[c(2, 1, 4, 3)]
if (part[3] == "MQE"){
file.name <- paste0("./MQE_CV/MQE_CV_", paste(part[-3], collapse = "_"),
"/CV_res.txt")
} else {
file.name <- paste0("./CV/CV_", paste(part, collapse = "_"), "/CV_res.txt")
}
res.i <- read.table(file.name, h = TRUE)
# pTS results
res[i, 6] <- mean(res.i[, 2], na.rm = TRUE)
res[i, 7] <- sd(res.i[, 2], na.rm = TRUE)
# pVS results
res[(i + 8), 6] <- mean(res.i[, 3], na.rm = TRUE)
res[(i + 8), 7] <- sd(res.i[, 3], na.rm = TRUE)
}
data <- res
colnames(data)[6:7] <- c("var.ex", "se")
View(data)
View(data)
factor(rep(c("HRT", "HRT", "HRT", "HRT", "CSRT",
"CSRT", "CSRT", "CSRT"), 2), levels = c("HRT", "CSRT"))
data <- res
colnames(data)[6:7] <- c("var.ex", "se")
data$VCOV <- factor(rep(c("HRT", "HRT", "HRT", "HRT", "CSRT",
"CSRT", "CSRT", "CSRT"), 2), levels = c("HRT", "CSRT"))
View(data)
View(data)
View(data)
data$Q.eff
data$Q.eff == "biall"
data$Q.eff[data$Q.eff == "biall"] <- "bi"
View(data)
data$Q.eff <- factor(data$Q.eff, levels = c("par", "anc", "bi", "MQE"))
data$set <- as.factor(data$set)
pd <- position_dodge(width = 0.4)
pA <- ggplot(data, aes(x = Q.eff, y = var.ex, group = set, colour = set,
shape = set)) +
# plot expl.var (y) by subset, differentiate two lines by colour and shape
# (pTS and pVS)
geom_errorbar(aes(ymin = var.ex-(2*se), ymax = var.ex+(2*se)), width = .2,
position = pd) +
# add error bar : value +- 1* standard error
geom_point(size = 6, position = pd) + # draw point and specify size of the points
geom_line(aes(group = set), position = pd) + # draw a line between point
# modification of the legend elements
ylab("Explained genetic variance (%)") +
theme(axis.title.x = element_text(face = "bold", size = 16),
axis.title.y = element_text(face = "bold", size = 16),
axis.text.x  = element_text(size = 16),
axis.text = element_text(size = 16)) +
theme(legend.title = element_text(size = 16)) +
theme(legend.text = element_text(size = 16)) +
# divide the graph in several panels
facet_grid(. ~ VCOV,) +
# legend of the panels
theme(strip.text.x = element_text(size = 16, face = "bold"))
pA
res_info
setwd("F:/EU_NAM/EU_NAM_DENT/MPP_EUNAM/results2/")
res_info <- data.frame(rep("PH", 16), rep("short", 16),
rep(c("h.err", "cr.err_fast"), each = 8),
rep(c("par", "anc", "biall", "MQE"), time = 4),
rep(c("pTS", "pVS"), each = 4), stringsAsFactors = FALSE)
res_info <- res_info[c(1:4, 9:12, 5:8, 13:16), ]
colnames(res_info) <- c("trait", "subset", "VCOV", "Q.eff", "set")
res <- data.frame(res_info, res_tab, stringsAsFactors = FALSE)
for(i in 1:(dim(res_info)[1]/2)){
part <- res_info[i, ]
part <- part[-5]
part <- part[c(2, 1, 4, 3)]
if (part[3] == "MQE"){
file.name <- paste0("./MQE_CV/MQE_CV_", paste(part[-3], collapse = "_"),
"/CV_res.txt")
} else {
file.name <- paste0("./CV/CV_", paste(part, collapse = "_"), "/CV_res.txt")
}
res.i <- read.table(file.name, h = TRUE)
# pTS results
res[i, 6] <- mean(res.i[, 2], na.rm = TRUE)
res[i, 7] <- sd(res.i[, 2], na.rm = TRUE)
# pVS results
res[(i + 8), 6] <- mean(res.i[, 3], na.rm = TRUE)
res[(i + 8), 7] <- sd(res.i[, 3], na.rm = TRUE)
}
# format data.frame
data <- res
colnames(data)[6:7] <- c("var.ex", "se")
data$VCOV <- factor(rep(c("HRT", "HRT", "HRT", "HRT", "CSRT",
"CSRT", "CSRT", "CSRT"), 2), levels = c("HRT", "CSRT"))
data$Q.eff[data$Q.eff == "biall"] <- "bi"
data$Q.eff <- factor(data$Q.eff, levels = c("par", "anc", "bi", "MQE"))
data$set <- as.factor(data$set)
# plot
pd <- position_dodge(width = 0.4)
short_PH <- ggplot(data, aes(x = Q.eff, y = var.ex, group = set, colour = set,
shape = set)) +
# plot expl.var (y) by subset, differentiate two lines by colour and shape
# (pTS and pVS)
geom_errorbar(aes(ymin = var.ex-(2*se), ymax = var.ex+(2*se)), width = .2,
position = pd) +
# add error bar : value +- 1* standard error
geom_point(size = 6, position = pd) + # draw point and specify size of the points
geom_line(aes(group = set), position = pd) + # draw a line between point
# modification of the legend elements
ylab("Explained genetic variance (%)") +
theme(axis.title.x = element_text(face = "bold", size = 16),
axis.title.y = element_text(face = "bold", size = 16),
axis.text.x  = element_text(size = 16),
axis.text = element_text(size = 16)) +
theme(legend.title = element_text(size = 16)) +
theme(legend.text = element_text(size = 16)) +
# divide the graph in several panels
facet_grid(. ~ VCOV,) +
# legend of the panels
theme(strip.text.x = element_text(size = 16, face = "bold"))
short_PH
setwd("F:/EU_NAM/EU_NAM_DENT/MPP_EUNAM/results2/")
res_info <- data.frame(rep("DMY", 16), rep("hetero", 16),
rep(c("h.err", "cr.err_fast"), each = 8),
rep(c("par", "anc", "biall", "MQE"), time = 4),
rep(c("pTS", "pVS"), each = 4), stringsAsFactors = FALSE)
res_info <- res_info[c(1:4, 9:12, 5:8, 13:16), ]
colnames(res_info) <- c("trait", "subset", "VCOV", "Q.eff", "set")
res <- data.frame(res_info, res_tab, stringsAsFactors = FALSE)
for(i in 1:(dim(res_info)[1]/2)){
part <- res_info[i, ]
part <- part[-5]
part <- part[c(2, 1, 4, 3)]
if (part[3] == "MQE"){
file.name <- paste0("./MQE_CV/MQE_CV_", paste(part[-3], collapse = "_"),
"/CV_res.txt")
} else {
file.name <- paste0("./CV/CV_", paste(part, collapse = "_"), "/CV_res.txt")
}
res.i <- read.table(file.name, h = TRUE)
# pTS results
res[i, 6] <- mean(res.i[, 2], na.rm = TRUE)
res[i, 7] <- sd(res.i[, 2], na.rm = TRUE)
# pVS results
res[(i + 8), 6] <- mean(res.i[, 3], na.rm = TRUE)
res[(i + 8), 7] <- sd(res.i[, 3], na.rm = TRUE)
}
# format data.frame
data <- res
colnames(data)[6:7] <- c("var.ex", "se")
data$VCOV <- factor(rep(c("HRT", "HRT", "HRT", "HRT", "CSRT",
"CSRT", "CSRT", "CSRT"), 2), levels = c("HRT", "CSRT"))
data$Q.eff[data$Q.eff == "biall"] <- "bi"
data$Q.eff <- factor(data$Q.eff, levels = c("par", "anc", "bi", "MQE"))
data$set <- as.factor(data$set)
pd <- position_dodge(width = 0.4)
hetero_DMY <- ggplot(data, aes(x = Q.eff, y = var.ex, group = set, colour = set,
shape = set)) +
# plot expl.var (y) by subset, differentiate two lines by colour and shape
# (pTS and pVS)
geom_errorbar(aes(ymin = var.ex-(2*se), ymax = var.ex+(2*se)), width = .2,
position = pd) +
# add error bar : value +- 1* standard error
geom_point(size = 6, position = pd) + # draw point and specify size of the points
geom_line(aes(group = set), position = pd) + # draw a line between point
# modification of the legend elements
ylab("Explained genetic variance (%)") +
theme(axis.title.x = element_text(face = "bold", size = 16),
axis.title.y = element_text(face = "bold", size = 16),
axis.text.x  = element_text(size = 16),
axis.text = element_text(size = 16)) +
theme(legend.title = element_text(size = 16)) +
theme(legend.text = element_text(size = 16)) +
# divide the graph in several panels
facet_grid(. ~ VCOV,) +
# legend of the panels
theme(strip.text.x = element_text(size = 16, face = "bold"))
hetero_DMY
# hetero PH
############
setwd("F:/EU_NAM/EU_NAM_DENT/MPP_EUNAM/results2/")
res_info <- data.frame(rep("PH", 16), rep("hetero", 16),
rep(c("h.err", "cr.err_fast"), each = 8),
rep(c("par", "anc", "biall", "MQE"), time = 4),
rep(c("pTS", "pVS"), each = 4), stringsAsFactors = FALSE)
res_info <- res_info[c(1:4, 9:12, 5:8, 13:16), ]
colnames(res_info) <- c("trait", "subset", "VCOV", "Q.eff", "set")
res <- data.frame(res_info, res_tab, stringsAsFactors = FALSE)
for(i in 1:(dim(res_info)[1]/2)){
part <- res_info[i, ]
part <- part[-5]
part <- part[c(2, 1, 4, 3)]
if (part[3] == "MQE"){
file.name <- paste0("./MQE_CV/MQE_CV_", paste(part[-3], collapse = "_"),
"/CV_res.txt")
} else {
file.name <- paste0("./CV/CV_", paste(part, collapse = "_"), "/CV_res.txt")
}
res.i <- read.table(file.name, h = TRUE)
# pTS results
res[i, 6] <- mean(res.i[, 2], na.rm = TRUE)
res[i, 7] <- sd(res.i[, 2], na.rm = TRUE)
# pVS results
res[(i + 8), 6] <- mean(res.i[, 3], na.rm = TRUE)
res[(i + 8), 7] <- sd(res.i[, 3], na.rm = TRUE)
}
# format data.frame
data <- res
colnames(data)[6:7] <- c("var.ex", "se")
data$VCOV <- factor(rep(c("HRT", "HRT", "HRT", "HRT", "CSRT",
"CSRT", "CSRT", "CSRT"), 2), levels = c("HRT", "CSRT"))
data$Q.eff[data$Q.eff == "biall"] <- "bi"
data$Q.eff <- factor(data$Q.eff, levels = c("par", "anc", "bi", "MQE"))
data$set <- as.factor(data$set)
pd <- position_dodge(width = 0.4)
hetero_PH <- ggplot(data, aes(x = Q.eff, y = var.ex, group = set, colour = set,
shape = set)) +
# plot expl.var (y) by subset, differentiate two lines by colour and shape
# (pTS and pVS)
geom_errorbar(aes(ymin = var.ex-(2*se), ymax = var.ex+(2*se)), width = .2,
position = pd) +
# add error bar : value +- 1* standard error
geom_point(size = 6, position = pd) + # draw point and specify size of the points
geom_line(aes(group = set), position = pd) + # draw a line between point
# modification of the legend elements
ylab("Explained genetic variance (%)") +
theme(axis.title.x = element_text(face = "bold", size = 16),
axis.title.y = element_text(face = "bold", size = 16),
axis.text.x  = element_text(size = 16),
axis.text = element_text(size = 16)) +
theme(legend.title = element_text(size = 16)) +
theme(legend.text = element_text(size = 16)) +
# divide the graph in several panels
facet_grid(. ~ VCOV,) +
# legend of the panels
theme(strip.text.x = element_text(size = 16, face = "bold"))
hetero_PH
setwd("F:/EU_NAM/EU_NAM_DENT/MPP_EUNAM/results2/")
res_info <- data.frame(rep("DMY", 16), rep("long", 16),
rep(c("h.err", "cr.err_fast"), each = 8),
rep(c("par", "anc", "biall", "MQE"), time = 4),
rep(c("pTS", "pVS"), each = 4), stringsAsFactors = FALSE)
res_info <- res_info[c(1:4, 9:12, 5:8, 13:16), ]
colnames(res_info) <- c("trait", "subset", "VCOV", "Q.eff", "set")
res <- data.frame(res_info, res_tab, stringsAsFactors = FALSE)
for(i in 1:(dim(res_info)[1]/2)){
part <- res_info[i, ]
part <- part[-5]
part <- part[c(2, 1, 4, 3)]
if (part[3] == "MQE"){
file.name <- paste0("./MQE_CV/MQE_CV_", paste(part[-3], collapse = "_"),
"/CV_res.txt")
} else {
file.name <- paste0("./CV/CV_", paste(part, collapse = "_"), "/CV_res.txt")
}
res.i <- read.table(file.name, h = TRUE)
# pTS results
res[i, 6] <- mean(res.i[, 2], na.rm = TRUE)
res[i, 7] <- sd(res.i[, 2], na.rm = TRUE)
# pVS results
res[(i + 8), 6] <- mean(res.i[, 3], na.rm = TRUE)
res[(i + 8), 7] <- sd(res.i[, 3], na.rm = TRUE)
}
# format data.frame
data <- res
colnames(data)[6:7] <- c("var.ex", "se")
data$VCOV <- factor(rep(c("HRT", "HRT", "HRT", "HRT", "CSRT",
"CSRT", "CSRT", "CSRT"), 2), levels = c("HRT", "CSRT"))
data$Q.eff[data$Q.eff == "biall"] <- "bi"
data$Q.eff <- factor(data$Q.eff, levels = c("par", "anc", "bi", "MQE"))
data$set <- as.factor(data$set)
# plot
pd <- position_dodge(width = 0.4)
long_DMY <- ggplot(data, aes(x = Q.eff, y = var.ex, group = set, colour = set,
shape = set)) +
# plot expl.var (y) by subset, differentiate two lines by colour and shape
# (pTS and pVS)
geom_errorbar(aes(ymin = var.ex-(2*se), ymax = var.ex+(2*se)), width = .2,
position = pd) +
# add error bar : value +- 1* standard error
geom_point(size = 6, position = pd) + # draw point and specify size of the points
geom_line(aes(group = set), position = pd) + # draw a line between point
# modification of the legend elements
ylab("Explained genetic variance (%)") +
theme(axis.title.x = element_text(face = "bold", size = 16),
axis.title.y = element_text(face = "bold", size = 16),
axis.text.x  = element_text(size = 16),
axis.text = element_text(size = 16)) +
theme(legend.title = element_text(size = 16)) +
theme(legend.text = element_text(size = 16)) +
# divide the graph in several panels
facet_grid(. ~ VCOV,) +
# legend of the panels
theme(strip.text.x = element_text(size = 16, face = "bold"))
long_DMY
# long PH
##########
setwd("F:/EU_NAM/EU_NAM_DENT/MPP_EUNAM/results2/")
res_info <- data.frame(rep("PH", 16), rep("long", 16),
rep(c("h.err", "cr.err_fast"), each = 8),
rep(c("par", "anc", "biall", "MQE"), time = 4),
rep(c("pTS", "pVS"), each = 4), stringsAsFactors = FALSE)
res_info <- res_info[c(1:4, 9:12, 5:8, 13:16), ]
colnames(res_info) <- c("trait", "subset", "VCOV", "Q.eff", "set")
res <- data.frame(res_info, res_tab, stringsAsFactors = FALSE)
for(i in 1:(dim(res_info)[1]/2)){
part <- res_info[i, ]
part <- part[-5]
part <- part[c(2, 1, 4, 3)]
if (part[3] == "MQE"){
file.name <- paste0("./MQE_CV/MQE_CV_", paste(part[-3], collapse = "_"),
"/CV_res.txt")
} else {
file.name <- paste0("./CV/CV_", paste(part, collapse = "_"), "/CV_res.txt")
}
res.i <- read.table(file.name, h = TRUE)
# pTS results
res[i, 6] <- mean(res.i[, 2], na.rm = TRUE)
res[i, 7] <- sd(res.i[, 2], na.rm = TRUE)
# pVS results
res[(i + 8), 6] <- mean(res.i[, 3], na.rm = TRUE)
res[(i + 8), 7] <- sd(res.i[, 3], na.rm = TRUE)
}
# format data.frame
data <- res
colnames(data)[6:7] <- c("var.ex", "se")
data$VCOV <- factor(rep(c("HRT", "HRT", "HRT", "HRT", "CSRT",
"CSRT", "CSRT", "CSRT"), 2), levels = c("HRT", "CSRT"))
data$Q.eff[data$Q.eff == "biall"] <- "bi"
data$Q.eff <- factor(data$Q.eff, levels = c("par", "anc", "bi", "MQE"))
data$set <- as.factor(data$set)
# plot
pd <- position_dodge(width = 0.4)
long_PH <- ggplot(data, aes(x = Q.eff, y = var.ex, group = set, colour = set,
shape = set)) +
# plot expl.var (y) by subset, differentiate two lines by colour and shape
# (pTS and pVS)
geom_errorbar(aes(ymin = var.ex-(2*se), ymax = var.ex+(2*se)), width = .2,
position = pd) +
# add error bar : value +- 1* standard error
geom_point(size = 6, position = pd) + # draw point and specify size of the points
geom_line(aes(group = set), position = pd) + # draw a line between point
# modification of the legend elements
ylab("Explained genetic variance (%)") +
theme(axis.title.x = element_text(face = "bold", size = 16),
axis.title.y = element_text(face = "bold", size = 16),
axis.text.x  = element_text(size = 16),
axis.text = element_text(size = 16)) +
theme(legend.title = element_text(size = 16)) +
theme(legend.text = element_text(size = 16)) +
# divide the graph in several panels
facet_grid(. ~ VCOV,) +
# legend of the panels
theme(strip.text.x = element_text(size = 16, face = "bold"))
long_PH
